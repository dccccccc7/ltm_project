<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mes.WorkshopStorage.mapper.LineMapper">


    <select id="createInfo"  resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select id,name,routing from workshop_line where workshop_id=#{workshopId} and is_deleted="0" and verify="create"
    </select>
    <select id="getByWorkshop"  resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select id,workshop_id,name,routing from workshop_line where workshop_id=#{workshopId} and is_deleted="0" and (verify="normal" or verify="delete")
    </select>
    <select id="checkByWorkshop"  resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select id from workshop_line where workshop_id=#{workshopId} and is_deleted="0"
    </select>
    <select id="getById" resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select uuid,id,workshop_id,name,verify,created_time,modified_time,routing from workshop_line where workshop_id=#{workshopId} and id=#{lineId} and is_deleted="0" and (verify="normal" or verify="delete")
    </select>
    <select id="getApplyById" resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select uuid,id,workshop_id,name,verify,created_time,modified_time,pre_id,routing from workshop_line where workshop_id=#{workshopId} and company_id = #{company_id} and id=#{lineId} and is_deleted="0" and verify!="normal"
    </select>
    <select id="getByName" resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select uuid,id,workshop_id,name,verify,created_time,modified_time from workshop_line where workshop_id=#{workshopId} and name=#{lineName} and is_deleted="0" and (verify="normal" or verify="delete")
    </select>
    <update id="updateByWorkshop">
        update workshop_line set workshop_id=#{workshopId} where workshop_id=#{pre_id} and is_deleted="0" and company_id = #{company_id}
    </update>
    <select id="checkById" resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select id,workshop_id,name from workshop_line where workshop_id=#{workshopId} and company_id = #{company_id} and id=#{lineId} and is_deleted="0"
    </select>
    <insert id="insert" parameterType="com.example.mes.WorkshopStorage.entity.Line">
        insert into workshop_line values (#{uuid}, #{id}, #{workshop_id}, #{name},#{routing},#{verify},#{pre_id},#{status},#{is_deleted},#{created_time},#{created_by},#{modified_time},#{modified_by},#{company_id})
    </insert>
    <update id="delete">
        update workshop_line set verify="delete",modified_time=#{modified_time} where id=#{lineId} and workshop_id=#{workshopId} and verify="normal" and is_deleted="0"
    </update>
    <select id="checkByPre_id" resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select uuid from workshop_line where pre_id =#{lineId} and workshop_id=#{workshopId} and verify="insert" and is_deleted="0"
    </select>
    <select id="getUpdate" resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select uuid from workshop_line where pre_id=#{lineId} and verify="insert" and is_deleted="0"
    </select>
    <select id="getLineNumById" resultType="java.lang.Integer">
        select count(*) from workshop_line where workshop_id=#{workshopId} and is_deleted="0" and (verify="normal" or verify="delete")  and company_id=#{company_id} GROUP BY workshop_id
    </select>
    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from workshop_line where is_deleted="0" and company_id = #{company_id} and (verify="normal" or verify="delete")
    </select>
    <select id="getApplyCount" resultType="java.lang.Integer">
        select count(*) from workshop_line where is_deleted="0" and company_id = #{company_id} and verify!="normal" and verify!="create"
    </select>
    <select id="selectAll"  resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select id,name,workshop_id,created_time,modified_time,routing from workshop_line where is_deleted="0" and company_id = #{company_id} and (verify="normal" or verify="delete") order by id limit #{start},#{num}
    </select>
    <select id="selectApplyAll"  resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select id,name,workshop_id,routing,created_time,modified_time,created_by,modified_by,verify,pre_id from workshop_line where is_deleted="0" and company_id = #{company_id} and verify!="normal" and verify!="create" order by id limit #{start},#{num}
    </select>
    <update id="setNormal">
        update workshop_line set verify="normal",modified_time=#{modified_time},modified_by=#{user} where workshop_id=#{workshopId} and company_id = #{company_id} and id=#{lineId} and verify!="normal" and is_deleted="0"
    </update>
    <update id="setDelete">
        update workshop_line set is_deleted="1",modified_time=#{modified_time},modified_by=#{user} where workshop_id=#{workshopId} and company_id = #{company_id} and id=#{lineId} and verify="normal" and is_deleted="0"
    </update>
    <update id="setNormalDelete">
        update workshop_line set is_deleted="1",verify="normal",modified_time=#{modified_time},modified_by=#{user} where workshop_id=#{workshopId} and company_id = #{company_id} and id=#{lineId} and verify!="normal" and is_deleted="0"
    </update>
    <update id="setNormalByWorkshop">
        update workshop_line set verify="normal",modified_time=#{modified_time},modified_by=#{user} where workshop_id=#{workshopId} and verify="create" and is_deleted="0" and company_id = #{company_id}
    </update>
    <update id="setDeleteByWorkshop">
        update workshop_line set is_deleted="1",verify="normal",modified_time=#{modified_time},modified_by=#{user} where workshop_id=#{workshopId} and company_id = #{company_id} and verify="create" and is_deleted="0"
    </update>

    <select id="selectAllLine"  resultType="com.example.mes.WorkshopStorage.vo.LineVo">
        select id,name,workshop_id,routing,created_time,modified_time,created_by,modified_by,verify,pre_id from workshop_line where is_deleted="0" and workshop_id = #{workshopId} and verify="normal"
    </select>

    <update id="deleteAllLine">
        update workshop_line set is_deleted="1",verify="normal",modified_time=#{modified_time} where id=#{lineId} and workshop_id=#{workshopId} and verify="normal" and is_deleted="0"
    </update>

    <update id="setNormalByWorkshop2">
        update workshop_line set is_deleted="0",verify="normal",modified_time=#{modified_time},modified_by=#{user} where workshop_id=#{workshopId} and company_id = #{company_id} and verify="normal" and is_deleted="1"
    </update>

    <select id="searchProductId" resultType="com.example.mes.process.Vo.ProductVo.QueryProductVo">
        SELECT product_id,type FROM product where company_id = #{company_id}
    </select>

    <select id="getLinesByWorkshop"  resultType="com.example.mes.WorkshopStorage.vo.newLineVo">
        select id,workshop_id,name,routing from workshop_line where workshop_id=#{workshopId} and is_deleted="0" and (verify="normal" or verify="delete")
    </select>

    <select id="selectPageLines"  resultType="com.example.mes.WorkshopStorage.vo.newLineVo">
        select id,name,workshop_id,created_time,modified_time,routing from workshop_line where workshop_id =#{workshopId} and company_id = #{company_id} and is_deleted="0" and (verify="normal" or verify="delete") order by id limit #{start},#{num}
    </select>

    <select id="getCountByWorkshopId" resultType="java.lang.Integer">
        select count(*) from workshop_line where workshop_id=#{workshopId} and company_id = #{company_id} and is_deleted="0" and (verify="normal" or verify="delete")
    </select>

</mapper>